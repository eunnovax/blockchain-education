{"version":3,"sources":["context.js","components/Block.js","components/Blockchain.js","components/Network.js","components/Default.js","App.js","index.js","logo.svg"],"names":["ProductContext","React","createContext","ProductProvider","props","setNetwork","network","tempNetwork","forEach","blockchain","singleBlockchain","setState","setPattern","diff","pattern","x","blockText","block","chain","blockNumber","data","nonce","previousBlockHash","timestamp","sha256","SHA256","updateHash","hash","toString","updateChain","state","i","length","mine","maxNonce","substring","difficulty","changeNonce","e","target","value","changeData","addBlock","newBlock","addChain","newChain","chainId","consensus","preventDefault","checkChain","networkArray","console","log","Id","_id","axios","post","then","response","catch","error","res","alert","status","modalOpen","networkDB","this","get","Provider","children","Component","ProductConsumer","Consumer","withStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","button","margin","height","alignItems","justifyContent","dense","marginTop","menu","root","overflowX","table","minWidth","classes","chainID","BlockContainer","className","TextField","id","label","name","variant","onChange","multiline","rows","Button","color","onClick","styled","div","useStyles","makeStyles","fab","extendedIcon","SampleFab","Fab","aria-label","SampleButton","Blockchain","title","nodes","Fragment","map","key","indexOf","Network","Default","location","pathname","App","exact","path","component","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","ReactDOM","render","document","getElementById","module","exports"],"mappings":"20BAMA,IAAMA,EAAiBC,IAAMC,gBAGvBC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAeRC,WAAa,SAAAC,GACX,IAAIC,EAAc,GAClBD,EAAQE,SAAQ,SAAAC,GACd,IAAMC,EAAgB,KAAQD,GAC9BF,EAAW,sBAAOA,GAAP,CAAoBG,OAGjC,EAAKC,UAAS,WACZ,MAAO,CAAEL,QAASC,OAxBH,EA2BnBK,WAAa,SAACC,GAEZ,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAME,IACxBD,GAAW,IAEb,EAAKH,SAAS,CACdG,QAASA,KAjCQ,EAuDnBE,UAAY,SAACC,EAAOC,EAAOZ,GAAa,IAAD,EAC4BA,EAAQY,GAAOA,MAAMD,GAGtF,OAJqC,EAC9BE,YAD8B,EACjBC,KADiB,EACXC,MADW,EACJC,kBADI,EACeC,WAxDnC,EA6DnBC,OAAS,SAACP,EAAOC,EAAOZ,GAItB,OAFamB,IAAO,EAAKT,UAAUC,EAAOC,EAAOZ,KA/DhC,EAmEnBoB,WAAa,SAACT,EAAOC,EAAOZ,GAC1B,IAAIC,EAAW,YAAOD,GAEtB,OADAC,EAAYW,GAAOA,MAAMD,GAAOU,KAAO,EAAKH,OAAOP,EAAMC,EAAOX,GAAaqB,WACtErB,GAtEU,EAwEnBsB,YAAc,SAACZ,EAAOC,GAEpB,IADA,IAAIX,EAAW,YAAO,EAAKuB,MAAMxB,SACxByB,EAAEd,EAAOc,EAAI,EAAKD,MAAMxB,QAAQY,GAAOA,MAAMc,OAAQD,IACxDA,EAAE,IAEJxB,EAAYW,GAAOA,MAAMa,GAAGT,kBAAoBf,EAAYW,GAAOA,MAAMa,EAAE,GAAGJ,MAGhFpB,EAAc,EAAKmB,WAAWK,EAAGb,EAAOX,GAE1C,EAAKI,SAAS,CAACL,QAASC,KAlFP,EAoFnB0B,KAAO,SAAChB,EAAMC,GAEZ,IAAK,IAAIH,EAAE,EAAGA,EAAE,EAAKe,MAAMI,SAAUnB,IAAK,CACxC,IAAIR,EAAW,YAAO,EAAKuB,MAAMxB,SAMjC,GAJAC,EAAYW,GAAOA,MAAMD,GAAOI,MAAQN,EAC3B,EAAKS,OAAOP,EAAOC,EAAOX,GAAaqB,WAG3CO,UAAU,EAAE,EAAKL,MAAMM,cAAgB,EAAKN,MAAMhB,QAAS,CAClE,EAAKe,YAAYZ,EAAOC,GACxB,SA/Fa,EAmGnBmB,YAAc,SAACC,EAAGrB,EAAOC,GACvB,IAAIX,EAAW,YAAO,EAAKuB,MAAMxB,SACjCC,EAAYW,GAAOA,MAAMD,GAAOI,MAAQiB,EAAEC,OAAOC,MAEjD,EAAK7B,SAAS,CACZL,QAASC,IACR,WACD,EAAKsB,YAAYZ,EAAOC,OA1GT,EA8GnBuB,WAAa,SAACH,EAAGrB,EAAOC,GACtB,IAAIX,EAAW,YAAO,EAAKuB,MAAMxB,SACjCC,EAAYW,GAAOA,MAAMD,GAAOG,KAAOkB,EAAEC,OAAOC,MAEhD,EAAK7B,SAAS,CACZL,QAASC,IACR,WACD,EAAKsB,YAAYZ,EAAOC,OArHT,EAyHnBwB,SAAW,SAACzB,EAAOC,GACjB,IAAIX,EAAW,YAAO,EAAKuB,MAAMxB,SAC7BqC,EAAW,GACfA,EAASxB,YAAcF,EAAQ,EAC/B0B,EAASvB,KAAO,YAChBuB,EAAStB,MAAQ,KACjBsB,EAASrB,kBAAoBf,EAAYW,EAAM,GAAGA,MAAMD,EAAM,GAAGU,KACjEgB,EAASpB,UAAY,KACrBoB,EAAShB,KAAO,UAChBpB,EAAYW,EAAM,GAAGA,MAArB,sBAAiCX,EAAYW,EAAM,GAAGA,OAAtD,CAA6DyB,IAC7D,EAAKhC,SAAS,CAACL,QAASC,KAnIP,EAqInBqC,SAAW,WACT,IAAIrC,EAAW,YAAO,EAAKuB,MAAMxB,SAC7BuC,EAAW,CACfA,MAAiB,EACjBA,MAAiB,kBACjBA,EAASC,QAAUvC,EAAYyB,OAAS,EACxCa,EAAS3B,MAAQ,GAEjB,IAAIyB,EAAW,CACfA,YAAuB,EACvBA,KAAgB,YAChBA,MAAiB,KACjBA,kBAA6B,IAC7BA,UAAqB,KACrBA,KAAgB,aAEhBE,EAAS3B,MAAT,sBAAqB2B,EAAS3B,OAA9B,CAAqCyB,IACrCpC,EAAW,sBAAOA,GAAP,CAAoBsC,IAC/B,EAAKlC,SAAS,CAACL,QAASC,KAvJP,EAyJnBwC,UAAY,SAACT,EAAGpB,GAId,GAFAoB,EAAEU,iBACW,EAAKC,WAAW/B,GACjB,CACZ,IAAMgC,EAAY,YAAO,EAAKpB,MAAMxB,SACpC6C,QAAQC,IAAI,WAAYF,GACxB,IAAMzC,EAAayC,EAAahC,GAChCiC,QAAQC,IAAI,mBAAoB3C,GAChC,IAAM4C,EAAK,EAAKvB,MAAMxB,QAAQY,GAAOoC,IACjCD,EACFE,IACCC,KAAK,wDAA0DH,EAAI5C,GACnEgD,MAAK,SAAAC,GACJP,QAAQC,IAAIM,EAAStC,SAEtBuC,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,MAGdL,IACCC,KAAK,oDAAqD/C,GAC1DgD,MAAK,SAAAI,GACNV,QAAQC,IAAIS,EAAIzC,SAEfuC,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,WAIdE,MAAM,6BAvLS,EA4LnBb,WAAa,SAAC/B,GAGZ,IAFA,IAAIX,EAAW,YAAO,EAAKuB,MAAMxB,SAC7ByD,GAAS,EACJhC,EAAE,EAAGA,EAAGxB,EAAYW,GAAOA,MAAMc,OAAQD,IAAK,CAErD,GADaxB,EAAYW,GAAOA,MAAMa,GAAGJ,KAChCQ,UAAU,EAAE,EAAKL,MAAMM,cAAgB,EAAKN,MAAMhB,QAEpD,CACLiD,GAAS,EACT,MAHAA,GAAS,EAOb,OADAZ,QAAQC,IAAI,oBAAqBW,GAC1BA,GAtMP,EAAKjC,MAAQ,CACXxB,QAAS,GACT0D,WAAW,EACX5B,WAAY,EACZF,SAAU,IACVpB,QAAS,GACTa,KAAM,GACNsC,UAAW,GACXF,QAAQ,GAXO,E,iFAqCE,IAAD,OAElBG,KAAKtD,WAAWsD,KAAKpC,MAAMM,YAC3Be,QAAQC,IAAI,qBACZG,IACCY,IAAI,kDACJV,MAAK,SAAAC,GACJP,QAAQC,IAAI,SAAUM,EAAStC,MAE/B,EAAKf,WAAWqD,EAAStC,SAE1BuC,OAAM,SAAAC,GACLT,QAAQC,IAAI,gC,+BA6Jd,OACE,kBAACpD,EAAeoE,SAAhB,CACE5B,MAAK,KACA0B,KAAKpC,MADL,CAEHX,YAAa+C,KAAKlD,UAClBQ,OAAQ0C,KAAK1C,OACbE,WAAYwC,KAAKxC,WACjBG,YAAaqC,KAAKrC,YAClBI,KAAMiC,KAAKjC,KACXI,YAAa6B,KAAK7B,YAClBI,WAAYyB,KAAKzB,WACjBC,SAAUwB,KAAKxB,SACfE,SAAUsB,KAAKtB,SACfG,UAAWmB,KAAKnB,aAIjBmB,KAAK9D,MAAMiE,c,GAhOUC,aAsOxBC,EAAkBvE,EAAewE,S,22BCvOvC,IAkCeC,eAlCA,SAAAC,GAAK,MAAK,CACvBC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,KAETC,OAAQ,CACNC,OAAQV,EAAMM,QAAQ,GACtBE,MAAO,IACPG,OAAQ,GACRT,QAAS,OACTU,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJR,MAAO,KAETS,KAAM,CACJT,MAAO,OACPO,UAAWf,EAAMM,QAAQ,GACzBY,UAAW,QAEbC,MAAO,CACLC,SAAU,QAICrB,CAAA,iLAGD,IACAsB,EAAY7B,KAAK9D,MAAjB2F,QADD,EASH7B,KAAK9D,MAAMa,MANbE,EAHK,EAGLA,YACAC,EAJK,EAILA,KACAC,EALK,EAKLA,MACAC,EANK,EAMLA,kBAEAK,GARK,EAOLJ,UAPK,EAQLI,MAEIqE,EAAU9B,KAAK9D,MAAM4F,QAE3B,OACE,kBAACzB,EAAD,MACG,SAAA/B,GACC,OACE,kBAACyD,EAAD,CAAgBC,UAAU,qBACxB,6BACI,0BAAMA,UAAWvE,EAAKQ,UAAU,EAAEK,EAAMJ,cAAgBI,EAAM1B,QAAU,gBAAkB,eACxF,6BACA,kBAACqF,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,UACNC,KAAK,eACL9D,MAAOrB,EAEPiE,OAAO,SACPmB,QAAQ,WACRL,UAAWH,EAAQjB,YAErB,6BACA,kBAACqB,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,QACNC,KAAK,QACL9D,MAAOnB,EACPmF,SAAU,SAAAlE,GAAC,OAAIE,EAAMH,YAAYC,EAAGnB,EAAY,EAAG6E,EAAQ,IAC3DZ,OAAO,SACPmB,QAAQ,WACRL,UAAWH,EAAQjB,YAErB,6BACA,kBAACqB,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNC,KAAK,OACL9D,MAAOpB,EACPoF,SAAU,SAAAlE,GAAC,OAAIE,EAAMC,WAAWH,EAAGnB,EAAY,EAAG6E,EAAQ,IAC1DZ,OAAO,SACPqB,WAAa,EACbC,KAAO,EACPH,QAAQ,WACRL,UAAWH,EAAQjB,YAErB,6BACA,kBAACqB,EAAA,EAAD,CACEC,GAAG,YACHC,MAAM,gBACNC,KAAK,gBACL9D,MAAOlB,EAEP8D,OAAO,SACPmB,QAAQ,WACRL,UAAWH,EAAQjB,YAErB,6BACA,kBAACqB,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNC,KAAK,OACL9D,MAAOb,EAEPyD,OAAO,SACPmB,QAAQ,WACRL,UAAWH,EAAQjB,YAErB,6BAEA,kBAAC6B,EAAA,EAAD,CACEJ,QAAQ,YACRK,MAAM,UACNC,QAAS,SAAAvE,GACPE,EAAMP,KAAKd,EAAY,EAAG6E,EAAQ,IAEpCE,UAAWH,EAAQZ,QANrB,SAYF,sCA7FL,GACOb,cAuGhB2B,EAAiBa,IAAOC,IAAV,K,sgBCxIpB,IAAMC,EAAYC,aAAW,SAAAvC,GAAK,MAAK,CACrCwC,IAAK,CACH9B,OAAQV,EAAMM,QAAQ,IAExBG,OAAQ,CACNC,OAAQV,EAAMM,QAAQ,IAExBmC,aAAc,CACZlC,YAAaP,EAAMM,QAAQ,QAIzBoC,EAAY,WAChB,IAAMrB,EAAUiB,IAChB,OAAQ,kBAACK,EAAA,EAAD,CACAT,MAAM,UACNU,aAAW,MACXpB,UAAWH,EAAQmB,KAEjB,kBAAC,IAAD,QAGNK,EAAc,WAClB,IAAMxB,EAAUiB,IAChB,OAAO,kBAACL,EAAA,EAAD,CACAJ,QAAQ,WACRK,MAAM,UACNV,UAAWH,EAAQZ,QAHnB,cAgEMqC,E,iLAlDX,IAAM/G,EAAayD,KAAK9D,MAAMK,WACtBgH,EAAwBhH,EAAxBgH,MAAOC,EAAiBjH,EAAjBiH,MAAOxG,EAAUT,EAAVS,MAChB8E,EAAU9B,KAAK9D,MAAM4F,QAC3B,OACE,kBAACzB,EAAD,MACG,SAAA/B,GACC,OACJ,kBAAC,IAAMmF,SAAP,KACI,yBAAKzB,UAAU,yCACb,wBAAIA,UAAU,0BAAd,IAAyCuB,EAAzC,MAGF,yBAAKvB,UAAU,yCACb,wBAAIA,UAAU,kBAAkBwB,EAAhC,WAEF,yBACAxB,UAAU,WACVW,QAAW,SAAAvE,GACTE,EAAMO,UAAUT,EAAG0D,EAAQ,KAG7B,kBAAC,EAAD,OAEA,yBAAKE,UAAU,YACdhF,EAAM0G,KAAI,SAAA3G,GACT,OACI,kBAAC,EAAD,CACA4G,IAAK3G,EAAM4G,QAAQ7G,GAAS,EAAGA,MAAOA,EACtC+E,QAASA,OAIX,yBACAE,UAAU,cACVW,QAAW,SAAAvE,GACPE,EAAME,SAASxB,EAAMc,OAAQgE,KAG/B,kBAAC,EAAD,gB,GA1CS1B,aCrCnB0C,GD6FiBF,IAAOC,IAAV,KC7FFE,aAAW,SAAAvC,GAAK,MAAK,CACrCwC,IAAK,CACH9B,OAAQV,EAAMM,QAAQ,IAExBmC,aAAc,CACZlC,YAAaP,EAAMM,QAAQ,SAIzBoC,EAAY,WAChB,IAAMrB,EAAUiB,IAChB,OAAQ,kBAACK,EAAA,EAAD,CACAT,MAAM,UACNU,aAAW,MACXpB,UAAWH,EAAQmB,KAEjB,kBAAC,IAAD,QAyCGa,E,iLAnCX,OACE,kBAAC,IAAMJ,SAAP,KACE,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC3B,EAAD,MACG,SAAA/B,GACC,OACE,kBAAC,IAAMmF,SAAP,KACDnF,EAAMlC,QAAQsH,KAAI,SAAAnH,GACjB,OACI,kBAAC,EAAD,CACEoH,IAAKrF,EAAMlC,QAAQwH,QAAQrH,GAAc,EACzCA,WAAYA,EACZuF,QAASxD,EAAMlC,QAAQwH,QAAQrH,GAAY,OAInD,yBACEoG,QAAW,SAAAvE,GACTE,EAAMI,aAGR,kBAAC,EAAD,kB,GAxBI0B,aCzBD0D,E,iLAEjB,OACE,yBAAK9B,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,6DACb,wBAAIA,UAAU,aAAd,OACA,qCACA,8CACA,gDAEE,0BAAMA,UAAU,eACbhC,KAAK9D,MAAM6H,SAASC,UACf,Y,GAbe5D,aCoBtB6D,E,iLAXX,OACE,kBAAC,IAAMR,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOO,UAAWN,U,GANV1D,a,yBCAZI,EAAQ6D,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAElBC,UAAW,CACPJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAK1BE,IAASC,OACJ,kBAAC,IAAD,CAAkBtE,MAAOA,GACrB,kBAAC,EAAD,KACI,kBAAC,IAAD,KACE,kBAAC,EAAD,SAIVuE,SAASC,eAAe,U,6EClC7BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.1300baf8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { network } from \"./Data\";\r\nimport SHA256 from 'crypto-js/sha256';\r\n// import port from '../../server';\r\n\r\nconst ProductContext = React.createContext();\r\n\r\n\r\nclass ProductProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      network: [],\r\n      modalOpen: false,\r\n      difficulty: 4,\r\n      maxNonce: 500000,\r\n      pattern: '',\r\n      hash: '',\r\n      networkDB: [],\r\n      status: false\r\n    };\r\n  }\r\n\r\n  // CONSTRUCTOR METHODS\r\n  setNetwork = network => {\r\n    let tempNetwork = [];\r\n    network.forEach(blockchain => {\r\n      const singleBlockchain = { ...blockchain };\r\n      tempNetwork = [...tempNetwork, singleBlockchain];\r\n    });\r\n    \r\n    this.setState(() => {\r\n      return { network: tempNetwork };\r\n    });\r\n  };\r\n  setPattern = (diff) => {\r\n    let pattern = '';\r\n    for (let x = 0; x < diff; x++) {\r\n      pattern += '0';\r\n    }\r\n    this.setState({\r\n    pattern: pattern \r\n  });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.setNetwork(network);\r\n    this.setPattern(this.state.difficulty);\r\n    console.log(\"component mounted\");\r\n    axios\r\n    .get('https://blockchainnet.herokuapp.com/broadcast/')\r\n    .then(response => {\r\n      console.log('blocks', response.data);\r\n      // this.setState({networkDB: response.data});\r\n      this.setNetwork(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.log('server did not respond!')\r\n    })\r\n  }\r\n  // END OF CONSTRUCTOR METHODS\r\n\r\n  //BODY METHODS\r\n  blockText = (block, chain, network) => {\r\n    const {blockNumber, data, nonce, previousBlockHash, timestamp} = network[chain].chain[block];\r\n    let blckTxt = blockNumber + data + nonce + previousBlockHash + timestamp;\r\n    // console.log('blockText', blckTxt);\r\n    return blckTxt;\r\n  }\r\n  sha256 = (block, chain, network) => {\r\n    // calculate a SHA256 hash of the contents of the block\r\n    const hash = SHA256(this.blockText(block, chain, network));\r\n    // console.log('hash', hash);\r\n    return hash;\r\n  }\r\n  updateHash = (block, chain, network) => {\r\n    let tempNetwork = [...network];\r\n    tempNetwork[chain].chain[block].hash = this.sha256(block,chain, tempNetwork).toString();\r\n    return tempNetwork;\r\n  }\r\n  updateChain = (block, chain) => {\r\n    let tempNetwork = [...this.state.network];\r\n    for (let i=block; i < this.state.network[chain].chain.length; i++ ) {\r\n      if (i>0) {\r\n        // console.log('tempNetwork', tempNetwork);\r\n        tempNetwork[chain].chain[i].previousBlockHash = tempNetwork[chain].chain[i-1].hash;\r\n        // this.setState({network: tempNetwork});\r\n      }\r\n      tempNetwork = this.updateHash(i, chain, tempNetwork);\r\n    }\r\n    this.setState({network: tempNetwork});\r\n  }\r\n  mine = (block,chain) => {\r\n    // const {nonce, hash} = this.state.chain[block];\r\n    for (let x=0; x<this.state.maxNonce; x++) {\r\n      let tempNetwork = [...this.state.network];\r\n      // console.log('tempNetwork', block, chain);\r\n      tempNetwork[chain].chain[block].nonce = x;\r\n      const hash = this.sha256(block, chain, tempNetwork).toString();\r\n      // console.log('string hash', hash);\r\n      // console.log('substring of hash', hash.substring(0,this.state.difficulty), 'pattern', this.state.pattern);\r\n      if (hash.substring(0,this.state.difficulty) === this.state.pattern) {\r\n        this.updateChain(block, chain);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  changeNonce = (e, block, chain) => {\r\n    let tempNetwork = [...this.state.network];\r\n    tempNetwork[chain].chain[block].nonce = e.target.value;\r\n    \r\n    this.setState({\r\n      network: tempNetwork\r\n    }, () => {\r\n      this.updateChain(block, chain)\r\n      // console.log('nonce', this.state.network[chain].chain[block].nonce);\r\n    });\r\n  };\r\n  changeData = (e, block, chain) => {\r\n    let tempNetwork = [...this.state.network];\r\n    tempNetwork[chain].chain[block].data = e.target.value;\r\n    \r\n    this.setState({\r\n      network: tempNetwork\r\n    }, () => {\r\n      this.updateChain(block, chain)\r\n      // console.log('data', this.state.network[chain].chain[block].data);\r\n    });\r\n  };\r\n  addBlock = (block, chain) => {\r\n    let tempNetwork = [...this.state.network];\r\n    let newBlock = {};\r\n    newBlock.blockNumber = block + 1;\r\n    newBlock.data = 'new block';\r\n    newBlock.nonce = 1111;\r\n    newBlock.previousBlockHash = tempNetwork[chain-1].chain[block-1].hash;\r\n    newBlock.timestamp = 1111;\r\n    newBlock.hash = '0101abc';\r\n    tempNetwork[chain-1].chain = [...tempNetwork[chain-1].chain, newBlock];\r\n    this.setState({network: tempNetwork});\r\n  };\r\n  addChain = () => {\r\n    let tempNetwork = [...this.state.network];\r\n    let newChain = {};\r\n    newChain.nodes = 0;\r\n    newChain.title = 'New Blockchain';\r\n    newChain.chainId = tempNetwork.length + 1;\r\n    newChain.chain = [];\r\n\r\n    let newBlock = {};\r\n    newBlock.blockNumber = 1;\r\n    newBlock.data = 'new block';\r\n    newBlock.nonce = 1111;\r\n    newBlock.previousBlockHash = '0';\r\n    newBlock.timestamp = 1111;\r\n    newBlock.hash = '0011afcde';\r\n    \r\n    newChain.chain = [...newChain.chain, newBlock];\r\n    tempNetwork = [...tempNetwork, newChain];\r\n    this.setState({network: tempNetwork});\r\n  };\r\n  consensus = (e, chain) => {\r\n    // check if the blockchain is valid and mined\r\n    e.preventDefault();\r\n    let status = this.checkChain(chain);\r\n    if (status) {\r\n    const networkArray = [...this.state.network];\r\n    console.log('netArray', networkArray);\r\n    const blockchain = networkArray[chain];\r\n    console.log('blockchain added', blockchain);\r\n    const Id = this.state.network[chain]._id;\r\n    if (Id) {\r\n      axios\r\n      .post('https://blockchainnet.herokuapp.com/broadcast/update/' + Id, blockchain)\r\n      .then(response => {\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      axios\r\n      .post('https://blockchainnet.herokuapp.com/broadcast/add', blockchain)\r\n      .then(res => {\r\n      console.log(res.data);\r\n      })\r\n      .catch(error=> {\r\n        console.log(error);\r\n      });\r\n    }\r\n    } else {\r\n      alert('blockchain is not valid!');\r\n    }\r\n    \r\n    // window.location = '/';\r\n  };\r\n  checkChain = (chain) => {\r\n    let tempNetwork = [...this.state.network];\r\n    let status = false;\r\n    for (let i=0; i< tempNetwork[chain].chain.length; i++) {\r\n      const hash = tempNetwork[chain].chain[i].hash;\r\n      if (hash.substring(0,this.state.difficulty) === this.state.pattern) {\r\n        status = true;\r\n      } else {\r\n        status = false;\r\n        break;\r\n      }\r\n    }\r\n    console.log('blockchain status', status);\r\n    return status;\r\n  };\r\n  //END OF BODY METHODS\r\n\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          blockNumber: this.blockText,\r\n          sha256: this.sha256,\r\n          updateHash: this.updateHash,\r\n          updateChain: this.updateChain,\r\n          mine: this.mine,\r\n          changeNonce: this.changeNonce,\r\n          changeData: this.changeData,\r\n          addBlock: this.addBlock,\r\n          addChain: this.addChain,\r\n          consensus: this.consensus\r\n          // bodyMethod: this.bodyMethod\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer };\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ProductConsumer } from \"../context\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 100,\r\n    height: 50,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  class Block extends Component {\r\n\r\n    render() {\r\n      const { classes } = this.props;\r\n      const {\r\n        blockNumber,\r\n        data,\r\n        nonce,\r\n        previousBlockHash,\r\n        timestamp,\r\n        hash\r\n      } = this.props.block;\r\n      const chainID = this.props.chainID;\r\n      // console.log('hash', hash, 'nonce', nonce);\r\n      return (\r\n        <ProductConsumer>\r\n          {value => {\r\n            return (\r\n              <BlockContainer className='col-lg-3 col-sm-6'>\r\n                <div>\r\n                    <form className={hash.substring(0,value.difficulty) === value.pattern ? 'block-success' : 'block-error' }>\r\n                      <br />\r\n                      <TextField\r\n                        id=\"blockN\"\r\n                        label=\"block #\"\r\n                        name=\"Block Number\"\r\n                        value={blockNumber}\r\n                        // onChange={e => value.change(e)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                      />\r\n                      <br />\r\n                      <TextField\r\n                        id=\"nonce\"\r\n                        label=\"Nonce\"\r\n                        name=\"Nonce\"\r\n                        value={nonce}\r\n                        onChange={e => value.changeNonce(e, blockNumber-1, chainID-1)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                      />\r\n                      <br />\r\n                      <TextField\r\n                        id=\"data\"\r\n                        label=\"Data\"\r\n                        name=\"data\"\r\n                        value={data}\r\n                        onChange={e => value.changeData(e, blockNumber-1, chainID-1)}\r\n                        margin=\"normal\"\r\n                        multiline = {true}\r\n                        rows= {4}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                      />\r\n                      <br />\r\n                      <TextField\r\n                        id=\"prevBHash\"\r\n                        label=\"prevBlockHash\"\r\n                        name=\"prevBlockHash\"\r\n                        value={previousBlockHash}\r\n                        // onChange={e => value.change(e)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                      />\r\n                      <br />\r\n                      <TextField\r\n                        id=\"hash\"\r\n                        label=\"hash\"\r\n                        name=\"Hash\"\r\n                        value={hash}\r\n                        // onChange={e => value.change(e)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                      />\r\n                      <br />\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={e=>{\r\n                          value.mine(blockNumber-1, chainID-1);\r\n                        }}\r\n                        className={classes.button} \r\n                        \r\n                      >\r\n                        Mine\r\n                      </Button>\r\n                    </form>\r\n                    <br />\r\n                  </div>\r\n              </BlockContainer>\r\n            );\r\n          }}\r\n        </ProductConsumer>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst BlockContainer = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin-top: 1rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  #modal {\r\n    background: var(--mainWhite);\r\n  }\r\n  &:hover {\r\n    .block-success {\r\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\r\n      box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .block-error {\r\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\r\n      box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n  .block-success {\r\n    border-color: transparent;\r\n    transition: all 0.2s linear;\r\n    border-radius: 25px;\r\n    background: var(--lighterGreen);\r\n  }\r\n  .block-error {\r\n    border-color: transparent;\r\n    transition: all 0.2s linear;\r\n    border-radius: 25px;\r\n    background: var(--pink);\r\n    \r\n  }\r\n`;\r\n// background: rgba(255, 255, 255, 1);\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProductConsumer } from \"../context\";\r\nimport Block from \"./Block\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SampleFab = () => {\r\n  const classes = useStyles();\r\n  return  <Fab \r\n          color=\"primary\" \r\n          aria-label=\"Add\" \r\n          className={classes.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n}\r\nconst SampleButton =()=> {\r\n  const classes = useStyles();\r\n  return <Button\r\n         variant=\"outlined\" \r\n         color=\"primary\" \r\n         className={classes.button}\r\n         >\r\n           Broadcast\r\n         </Button>\r\n}\r\n\r\n\r\nclass Blockchain extends Component {\r\n  \r\n  render() {\r\n\r\n    const blockchain = this.props.blockchain;\r\n    const { title, nodes, chain } = blockchain;\r\n    const chainID = this.props.chainID;\r\n    return (\r\n      <ProductConsumer>\r\n        {value=> {\r\n          return (\r\n      <React.Fragment>\r\n          <div className=\"chain-header d-flex align-self-center\">\r\n            <h5 className=\"align-self-center mb-0\"> {title} </h5>\r\n          </div>\r\n          \r\n          <div className=\"chain-header d-flex align-self-center\">\r\n            <h5 className=\"text-blue mb-0\">{nodes} Nodes</h5>\r\n          </div>\r\n          <div\r\n          className='div-size' \r\n          onClick = {e=> {\r\n            value.consensus(e, chainID-1);\r\n          }}\r\n          >\r\n          <SampleButton />\r\n          </div>\r\n          <div className=\"row my-5\">\r\n          {chain.map(block => {\r\n            return (\r\n                <Block \r\n                key={chain.indexOf(block) + 1} block={block}\r\n                chainID={chainID}\r\n                />                \r\n            );\r\n          })}\r\n              <div \r\n              className='buttonspace' \r\n              onClick = {e=>{\r\n                  value.addBlock(chain.length, chainID);\r\n                }}\r\n              >\r\n                <SampleFab/>\r\n              </div>\r\n\r\n          </div>\r\n        </React.Fragment>\r\n        );\r\n        }}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blockchain;\r\n\r\nconst ProductWrapper = styled.div`\r\n  .chain {\r\n    border-color: transparent;\r\n    transition: all 0.2s linear;\r\n  }\r\n  .chain-header {\r\n    background: transparent;\r\n    border-top: transparent;\r\n    transition: all 0.2s linear;\r\n  }\r\n  &:hover {\r\n    .chain {\r\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\r\n      box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .chain-header {\r\n      background: rgba(247, 247, 247);\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"../context\";\r\nimport Blockchain from \"./Blockchain\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SampleFab = () => {\r\n  const classes = useStyles();\r\n  return  <Fab \r\n          color=\"primary\" \r\n          aria-label=\"Add\" \r\n          className={classes.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n}\r\n\r\nclass Network extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"py-5\">\r\n          <div className=\"container\">\r\n            <ProductConsumer>\r\n              {value => {\r\n                return (\r\n                  <React.Fragment>\r\n                {value.network.map(blockchain => {\r\n                  return (\r\n                      <Blockchain\r\n                        key={value.network.indexOf(blockchain) + 1}\r\n                        blockchain={blockchain}\r\n                        chainID={value.network.indexOf(blockchain)+1}\r\n                      />\r\n                  );\r\n                })}\r\n                <div \r\n                  onClick = {e=>{\r\n                    value.addChain();\r\n                  }}\r\n                >\r\n                  <SampleFab/>\r\n                </div>\r\n              </React.Fragment>\r\n                );\r\n              }}\r\n            </ProductConsumer>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Network;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Default extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10 mx-auto text-center text-title text-uppercase pt-5\">\r\n            <h1 className=\"display-3\">404</h1>\r\n            <h1>error</h1>\r\n            <h2>page not found</h2>\r\n            <h3>\r\n              the requested URL\r\n              <span className=\"text-danger\">\r\n                {this.props.location.pathname}\r\n              </span>{\" \"}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Network from \"./components/Network\";\nimport Default from \"./components/Default\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\" component={Network} />\n          <Route component={Default} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ProductProvider} from \"./context\";\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core\";\n// import * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#35baf6\",\n            main: \"#2292b4\",\n            dark: \"#0276aa\",\n            contrastText: \"#fff\"\n        },\n        secondary: {\n            light: \"#ff7961\",\n            main: \"#f44336\",\n            dark: \"#ba000d\",\n            contrastText: \"#000\"\n        }\n    }\n});\n\nReactDOM.render(\n     <MuiThemeProvider theme={theme}>\n         <ProductProvider>\n             <Router>\n               <App />\n             </Router>\n         </ProductProvider>\n     </MuiThemeProvider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}